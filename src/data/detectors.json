{
  "Stripe": {
    "endpoints": {
      "account_metadata": {
        "label": "Account Metadata",
        "curl": "curl https://api.stripe.com/v1/account -u <api_key>:",
        "request_url": "https://api.stripe.com/v1/account",
        "request_method": "GET"
      },
      "balance": {
        "label": "Balance",
        "curl": "curl https://api.stripe.com/v1/balance -u <api_key>:",
        "request_url": "https://api.stripe.com/v1/balance",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Stripe API Key",
            "placeholder": "sk_live_xxxx"
          }
        }
      },
      "customers": {
        "label": "Customers",
        "curl": "curl https://api.stripe.com/v1/customers -u <api_key>:",
        "request_url": "https://api.stripe.com/v1/customers",
        "request_method": "GET"
      },
      "orders": {
        "label": "Orders",
        "curl": "curl https://api.stripe.com/v1/orders -u <api_key>:",
        "request_url": "https://api.stripe.com/v1/orders",
        "request_method": "GET"
      },
      "payment_intents": {
        "label": "Payment Intents",
        "curl": "curl https://api.stripe.com/v1/payment_intents -u <api_key>:",
        "request_url": "https://api.stripe.com/v1/payment_intents",
        "request_method": "GET"
      },
      "charges": {
        "label": "Charges",
        "curl": "curl https://api.stripe.com/v1/charges -u <api_key>:",
        "request_url": "https://api.stripe.com/v1/charges",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Stripe API Key",
        "placeholder": "sk_live_xxxx"
      }
    },
    "api_documentation_page": "https://stripe.com/docs/api"
  },
  "Paypal": {
    "endpoints": {
      "get_access_scope": {
        "label": "Access Scope",
        "curl": "curl -X POST 'https://api.paypal.com/v1/oauth2/token' -u '<client_id>:<client_secret>' -d 'grant_type=client_credentials'",
        "request_url": "https://api.paypal.com/v1/oauth2/token",
        "request_method": "GET"
      },
      "get_account": {
        "label": "Account",
        "curl": "access_token=$(curl -s -X POST 'https://api.paypal.com/v1/oauth2/token' -u '<client_id>:<client_secret>' -d 'grant_type=client_credentials' | jq -r '.access_token') && curl -X GET 'https://api.paypal.com/v1/identity/openidconnect/userinfo/?schema=openid' -H 'Authorization: Bearer $access_token'",
        "request_url": "https://api.paypal.com/v1/identity/openidconnect/userinfo/?schema=openid",
        "request_method": "GET"
      },
      "get_payments": {
        "label": "Payments",
        "curl": "access_token=$(curl -s -X POST 'https://api.paypal.com/v1/oauth2/token' -u '<client_id>:<client_secret>' -d 'grant_type=client_credentials' | jq -r '.access_token') && curl -X GET 'https://api.paypal.com/v1/payments/payment' -H 'Authorization: Bearer $access_token'",
        "request_url": "https://api.paypal.com/v1/payments/payment",
        "request_method": "GET"
      },
      "webhooks": {
        "label": "Webhooks",
        "curl": "access_token=$(curl -s -X POST 'https://api.paypal.com/v1/oauth2/token' -u '<client_id>:<client_secret>' -d 'grant_type=client_credentials' | jq -r '.access_token') && curl -X GET 'https://api.paypal.com/v1/notifications/webhooks' -H 'Authorization: Bearer $access_token'",
        "request_url": "https://api.paypal.com/v1/notifications/webhooks",
        "request_method": "GET"
      },
      "balance": {
        "label": "Balance",
        "curl": "access_token=$(curl -s -X POST 'https://api.paypal.com/v1/oauth2/token' -u '<client_id>:<client_secret>' -d 'grant_type=client_credentials' | jq -r '.access_token') && curl -X GET 'https://api.paypal.com/v1/reporting/balances' -H 'Authorization: Bearer $access_token'",
        "request_url": "https://api.paypal.com/v1/reporting/balances",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "client_id": {
        "type": "text",
        "label": "Enter Client ID",
        "placeholder": "Axxxx-xxxxx-xxxxx-xxxxxx"
      },
      "client_secret": {
        "type": "text",
        "label": "Enter Client Secret",
        "placeholder": "Exxxx-xxxxx-xxxxx-xxxxxx"
      }
    },
    "api_documentation_page": "https://developer.paypal.com/docs/api/overview/"
  },
  "OpenAI": {
    "endpoints": {
      "me": {
        "label": "Account Metadata",
        "curl": "curl -X GET 'https://api.openai.com/v1/me' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.openai.com/v1/me",
        "request_method": "GET"
      },
      "organizations": {
        "label": "Organizations",
        "curl": "curl -X GET 'https://api.openai.com/v1/organizations' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.openai.com/v1/organizations",
        "request_method": "GET"
      },
      "models": {
        "label": "Models",
        "curl": "curl -X GET 'https://api.openai.com/v1/models' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.openai.com/v1/models",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter OpenAI API Key",
        "placeholder": "sk-xxxxx-xxxxx-xxxxx-xxxxx"
      }
    },
    "api_documentation_page": "https://platform.openai.com/docs/api-reference/"
  },
  "Paystack": {
    "endpoints": {
      "transaction": {
        "label": "Transaction",
        "curl": "curl -X GET https://api.paystack.co/transaction -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.paystack.co/transaction",
        "request_method": "GET"
      },
      "customer": {
        "label": "Customer",
        "curl": "curl -X GET https://api.paystack.co/customer -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.paystack.co/customer",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Paystack API Key",
        "placeholder": "sk_live_xxxx"
      }
    },
    "api_documentation_page": "https://paystack.com/docs/api/"
  },
  "Twitter": {
    "endpoints": {
      "oauth_token": {
        "label": "OAuth 2.0 Bearer Token(app-only)",
        "curl": "curl -u '<api_key>:<api_secret_key>' --data 'grant_type=client_credentials' 'https://api.x.com/oauth2/token'",
        "request_url": "https://api.x.com/oauth2/token",
        "request_method": "POST",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Twitter API Key",
            "placeholder": "xxxxxxxxxxxxxxxxxxxxxxx"
          },
          "api_secret_key": {
            "type": "text",
            "label": "Enter Twitter API Secret Key",
            "placeholder": "xxxxxxxxxxxxxxxxxxxxxxx"
          }
        }
      },
      "verify_credentials": {
        "label": "Verify Credentials",
        "curl": "curl -X GET 'https://api.x.com/1.1/statuses/user_timeline.json?count=100&screen_name=twitterapi' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://api.x.com/1.1/statuses/user_timeline.json?count=100&screen_name=twitterapi",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "access_token": {
            "type": "text",
            "label": "Enter Twitter Bearer Token (Fetched from OAuth Token endpoint)",
            "placeholder": "AAAAAAAAAAAAAAAAAAAAA..."
          }
        }
      }
    },
    "api_documentation_page": "https://docs.x.com/fundamentals/authentication/oauth-2-0/overview",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Github": {
    "endpoints": {
      "user": {
        "label": "User",
        "curl": "curl -X GET 'https://api.github.com/user' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/user",
        "request_method": "GET"
      },
      "repos": {
        "label": "Repos",
        "curl": "curl -X GET 'https://api.github.com/user/repos?per_page=100&page=1' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/user/repos?per_page=100&page=1",
        "request_method": "GET"
      },
      "private-repos": {
        "label": "Private Repos",
        "curl": "curl -X GET 'https://api.github.com/user/repos?visibility=private&per_page=100&page=1' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/user/repos?visibility=private&per_page=100&page=1",
        "request_method": "GET"
      },
      "organizations": {
        "label": "Organizations",
        "curl": "curl -X GET 'https://api.github.com/user/orgs' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/user/orgs",
        "request_method": "GET"
      },
      "search_org_repos": {
        "label": "Search Org Repos",
        "curl": "curl -X GET 'https://api.github.com/search/code?q=<query>+org:<org_name>' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/search/code?q=<query>+org:<org_name>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "access_token": {
            "type": "text",
            "label": "Enter Github Access Token",
            "placeholder": "ghp_xxxxx"
          },
          "org_name": {
            "type": "text",
            "label": "Enter Organization Name",
            "placeholder": "github"
          },
          "query": {
            "type": "text",
            "label": "Enter Query",
            "placeholder": "AKIA, ghp_, password, api_key"
          }
        }
      },
      "gists": {
        "label": "Gists",
        "curl": "curl -X GET 'https://api.github.com/gists' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/gists",
        "request_method": "GET"
      },
      "notifications": {
        "label": "Notifications",
        "curl": "curl -X GET 'https://api.github.com/notifications' -H 'Authorization token <access_token>'",
        "request_url": "https://api.github.com/notifications",
        "request_method": "GET"
      },
      "events": {
        "label": "Events",
        "curl": "curl -X GET 'https://api.github.com/events?per_page=100&page=1' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/events?per_page=100&page=1",
        "request_method": "GET"
      },
      "user_packages": {
        "label": "Packages",
        "curl": "curl -X GET 'https://api.github.com/user/packages?package_type=<package_type>' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/user/packages?package_type=<package_type>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "access_token": {
            "type": "text",
            "label": "Enter Github Access Token",
            "placeholder": "ghp_xxxxx"
          },
          "package_type": {
            "type": "text",
            "label": "Enter Package Type (npm, gem, mvn, gradle, dotnet, docker)",
            "placeholder": "npm"
          }
        }
      },
      "org_packages": {
        "label": "Organization Packages",
        "curl": "curl -X GET 'https://api.github.com/orgs/<org_name>/packages?package_type=<package_type>' -H 'Authorization: token <access_token>'",
        "request_url": "https://api.github.com/orgs/<org_name>/packages?package_type=<package_type>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "access_token": {
            "type": "text",
            "label": "Enter Github Access Token",
            "placeholder": "ghp_xxxxx"
          },
          "org_name": {
            "type": "text",
            "label": "Enter Organization Name",
            "placeholder": "github"
          },
          "package_type": {
            "type": "text",
            "label": "Enter Package Type (npm, gem, mvn, gradle, dotnet, docker)",
            "placeholder": "npm"
          }
        }
      }
    },
    "input_fields": {
      "access_token": {
        "type": "text",
        "label": "Enter Github Access Token",
        "placeholder": "ghp_xxxxx"
      }
    },
    "api_documentation_page": "https://docs.github.com/en/rest"
  },
  "Gitlab": {
    "endpoints": {
      "user": {
        "label": "User",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/user' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/user",
        "request_method": "GET"
      },
      "projects": {
        "label": "Projects",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/projects?membership=true&per_page=100' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/projects?membership=true&per_page=100",
        "request_method": "GET"
      },
      "groups": {
        "label": "Groups",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/groups' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/groups",
        "request_method": "GET"
      },
      "issues": {
        "label": "Issues",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/issues' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/issues",
        "request_method": "GET"
      },
      "events": {
        "label": "Events",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/events' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/issues",
        "request_method": "GET"
      },
      "project_members": {
        "label": "Project Members",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/projects/<project_id>/members/all' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/projects/<project_id>/members/all",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "access_token": {
            "type": "text",
            "label": "Enter Gitlab Access Token",
            "placeholder": "glpat_xxxxx"
          },
          "project_id": {
            "type": "text",
            "label": "Enter Project ID (fetched from projects endpoint)",
            "placeholder": "123456"
          }
        }
      },
      "project_events": {
        "label": "Project Events",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/projects/<project_id>/events' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/projects/<project_id>/events",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "access_token": {
            "type": "text",
            "label": "Enter Gitlab Access Token",
            "placeholder": "glpat_xxxxx"
          },
          "project_id": {
            "type": "text",
            "label": "Enter Project ID (fetched from projects endpoint)",
            "placeholder": "123456"
          }
        }
      },
      "user_events": {
        "label": "User Events",
        "curl": "curl -X GET 'https://gitlab.com/api/v4/users/<user_id>/events' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://gitlab.com/api/v4/users/<user_id>/events",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "access_token": {
            "type": "text",
            "label": "Enter Gitlab Access Token",
            "placeholder": "glpat_xxxxx"
          },
          "user_id": {
            "type": "text",
            "label": "Enter User ID (fetched from User endpoint)",
            "placeholder": "123456"
          }
        }
      }
    },
    "input_fields": {
      "access_token": {
        "type": "text",
        "label": "Enter Gitlab Access Token",
        "placeholder": "glpat_xxxxx"
      }
    },
    "api_documentation_page": "https://docs.gitlab.com/ee/api/api_resources.html"
  },
  "LaunchDarkly": {
    "endpoints": {
      "projects": {
        "label": "Projects",
        "curl": "curl -X GET https://app.launchdarkly.com/api/v2/projects -H 'Authorization: api_key <api_key>'",
        "request_url": "https://app.launchdarkly.com/api/v2/projects",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter LaunchDarkly API Key",
        "placeholder": "api-xxxxx-xxxxx-xxxxx-xxxxx"
      }
    },
    "api_documentation_page": "https://apidocs.launchdarkly.com/"
  },
  "Omnisend": {
    "endpoints": {
      "contacts": {
        "label": "Contacts",
        "curl": "curl -X GET https://api.omnisend.com/v3/contacts?limit=100 -H 'X-API-KEY: <api_key>'",
        "request_url": "https://api.omnisend.com/v3/contacts?limit=100",
        "request_method": "GET"
      },
      "orders": {
        "label": "Orders",
        "curl": "curl -X GET https://api.omnisend.com/v3/orders?limit=100 -H 'X-API-KEY: <api_key>'",
        "request_url": "https://api.omnisend.com/v3/orders?limit=100",
        "request_method": "GET"
      },
      "campaigns": {
        "label": "Campaigns",
        "curl": "curl -X GET https://api.omnisend.com/v3/campaigns?limit=100 -H 'X-API-KEY: <api_key>'",
        "request_url": "https://api.omnisend.com/v3/campaigns?limit=100",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Omnisend API Key",
        "placeholder": "xxx-xxxxx-xxxxx-xxxxx-xxxxx"
      }
    },
    "api_documentation_page": "https://api-docs.omnisend.com/reference/"
  },
  "Shopify": {
    "endpoints": {
      "orders": {
        "label": "Orders",
        "curl": "curl -X GET https://<store_domain>/admin/api/2023-10/orders.json -H 'X-Shopify-Access-Token: <api_key>'",
        "request_url": "https://<store_domain>/admin/api/2023-10/orders.json",
        "request_method": "GET"
      },
      "customers": {
        "label": "Customers",
        "curl": "curl -X GET https://<store_domain>/admin/api/2023-10/customers.json -H 'X-Shopify-Access-Token: <api_key>'",
        "request_url": "https://<store_domain>/admin/api/2023-10/customers.json",
        "request_method": "GET"
      },
      "orders_count": {
        "label": "Orders Count",
        "curl": "curl -X GET https://<store_domain>/admin/api/2023-10/orders/count.json -H 'X-Shopify-Access-Token: <api_key>'",
        "request_url": "https://<store_domain>/admin/api/2023-10/orders/count.json",
        "request_method": "GET"
      },
      "customers_count": {
        "label": "Customers Count",
        "curl": "curl -X GET https://<store_domain>/admin/api/2023-10/customers/count.json -H 'X-Shopify-Access-Token: <api_key>'",
        "request_url": "https://<store_domain>/admin/api/2023-10/customers/count.json",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Shopify API Key",
        "placeholder": "shp_12345"
      },
      "store_domain": {
        "type": "text",
        "label": "Enter Store Domain",
        "placeholder": "store.myshopify.com"
      }
    },
    "api_documentation_page": "https://shopify.dev/docs/api/admin-rest",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Telegram": {
    "endpoints": {
      "bot_info": {
        "label": "Bot Info",
        "curl": "curl -X GET https://api.telegram.org/bot<bot_token>/getMe",
        "request_url": "https://api.telegram.org/bot<token>/getMe",
        "request_method": "GET"
      },
      "get_updates": {
        "label": "Updates",
        "curl": "curl -X GET https://api.telegram.org/bot<bot_token>/getUpdates",
        "request_url": "https://api.telegram.org/bot<token>/getUpdates",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "bot_token": {
        "type": "text",
        "label": "Enter Bot Token",
        "placeholder": "123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11"
      }
    },
    "api_documentation_page": "https://core.telegram.org/bots/api"
  },
  "Clearbit": {
    "endpoints": {
      "person": {
        "label": "Person",
        "curl": "curl 'https://person.clearbit.com/v2/people/find?email=<email>' -u <api_key>:",
        "request_url": "https://person.clearbit.com/v2/people/find?email=",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Clearbit API Key",
            "placeholder": "sk_xxx"
          },
          "email": {
            "type": "text",
            "label": "Enter Email",
            "placeholder": "test@test.com"
          }
        }
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Clearbit API Key",
        "placeholder": "sk_xxx"
      }
    },
    "api_documentation_page": "https://clearbit.com/docs",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "SendInBlue": {
    "endpoints": {
      "contacts": {
        "label": "Contacts",
        "curl": "curl -X GET https://api.sendinblue.com/v3/contacts -H 'api-key: <api_key>'",
        "request_url": "https://api.sendinblue.com/v3/contacts",
        "request_method": "GET"
      },
      "campaigns": {
        "label": "Campaigns",
        "curl": "curl -X GET https://api.sendinblue.com/v3/emailCampaigns -H 'api-key: <api_key>'",
        "request_url": "https://api.sendinblue.com/v3/emailCampaigns",
        "request_method": "GET"
      },
      "account": {
        "label": "Account",
        "curl": "curl -X GET https://api.sendinblue.com/v3/account -H 'api-key:  <api_key>'",
        "request_url": "https://api.sendinblue.com/v3/account",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter SendInBlue API Key",
        "placeholder": "xkeysib-xxx-xxxxx-xxxxx-xxxxx-xxxxx"
      }
    },
    "api_documentation_page": "https://developers.sendinblue.com/reference"
  },
  "RechargePayments": {
    "endpoints": {
      "charges": {
        "label": "Charges",
        "curl": "curl -X GET https://api.rechargeapps.com/charges -H 'X-Recharge-Access-Token: <api_key>'",
        "request_url": "https://api.rechargeapps.com/charges",
        "request_method": "GET"
      },
      "orders": {
        "label": "Orders",
        "curl": "curl -X GET https://api.rechargeapps.com/orders -H 'X-Recharge-Access-Token: <api_key>'",
        "request_url": "https://api.rechargeapps.com/orders",
        "request_method": "GET"
      },
      "customers": {
        "label": "Customers",
        "curl": "curl -X GET https://api.rechargeapps.com/customers -H 'X-Recharge-Access-Token: <api_key>'",
        "request_url": "https://api.rechargeapps.com/customers",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Recharge API Key",
        "placeholder": "sk_xxx-xxx-xxx"
      }
    },
    "api_documentation_page": "https://developer.rechargepayments.com/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "MailerLite": {
    "endpoints": {
      "subscribers": {
        "label": "Subscribers",
        "curl": "curl -X GET https://api.mailerlite.com/api/v2/subscribers -H 'X-MailerLite-ApiKey: <api_key>'",
        "request_url": "https://api.mailerlite.com/api/v2/subscribers",
        "request_method": "GET"
      },
      "campaigns": {
        "label": "Campaigns",
        "curl": "curl -X GET https://api.mailerlite.com/api/v2/campaigns -H 'X-MailerLite-ApiKey: <api_key>'",
        "request_url": "https://api.mailerlite.com/api/v2/campaigns",
        "request_method": "GET"
      },
      "groups": {
        "label": "Groups",
        "curl": "curl -X GET https://api.mailerlite.com/api/v2/groups -H 'X-MailerLite-ApiKey: <api_key>'",
        "request_url": "https://api.mailerlite.com/api/v2/groups",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter MailerLite API Key",
        "placeholder": "xxxx-xxx-xxx"
      }
    },
    "api_documentation_page": "https://developers.mailerlite.com/docs/#mailerlite-api",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Trello": {
    "endpoints": {
      "about_me": {
        "label": "Account Metadata",
        "curl": "curl -X GET 'https://api.trello.com/1/members/me?key=<key>&token=<token>'",
        "request_url": "https://api.trello.com/1/members/me?key=<key>&token=<token>",
        "request_method": "GET"
      },
      "boards": {
        "label": "Boards",
        "curl": "curl -X GET 'https://api.trello.com/1/members/me/boards?key=<key>&token=<token>'",
        "request_url": "https://api.trello.com/1/members/me/boards?key=<key>&token=<token>",
        "request_method": "GET"
      },
      "organizations": {
        "label": "Organizations",
        "curl": "curl -X GET 'https://api.trello.com/1/members/me/organizations?key=<key>&token=<token>'",
        "request_url": "https://api.trello.com/1/members/me/organizations?key=<key>&token=<token>",
        "request_method": "GET"
      },
      "actions": {
        "label": "Actions",
        "curl": "curl -X GET 'https://api.trello.com/1/members/me/actions?key=<key>&token=<token>'",
        "request_url": "https://api.trello.com/1/members/me/actions?key=<key>&token=<token>",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "key": {
        "type": "text",
        "label": "Enter Trello Key",
        "placeholder": "xxxx-xxx-xxx"
      },
      "token": {
        "type": "text",
        "label": "Enter Trello Token",
        "placeholder": "xxxx-xxx-xxx"
      }
    },
    "api_documentation_page": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/"
  },
  "RazorPay": {
    "endpoints": {
      "payments": {
        "label": "Payments",
        "curl": "curl -X GET https://api.razorpay.com/v1/payments -u <key_id>:<key_secret>",
        "request_url": "https://api.razorpay.com/v1/payments",
        "request_method": "GET"
      },
      "customers": {
        "label": "Customers",
        "curl": "curl -X GET https://api.razorpay.com/v1/customers -u <key_id>:<key_secret>",
        "request_url": "https://api.razorpay.com/v1/customers",
        "request_method": "GET"
      },
      "orders": {
        "label": "Orders",
        "curl": "curl -X GET https://api.razorpay.com/v1/orders -u <key_id>:<key_secret>",
        "request_url": "https://api.razorpay.com/v1/orders",
        "request_method": "GET"
      },
      "invoices": {
        "label": "Invoices",
        "curl": "curl -X GET https://api.razorpay.com/v1/invoices -u <key_id>:<key_secret>",
        "request_url": "https://api.razorpay.com/v1/invoices",
        "request_method": "GET"
      },
      "refunds": {
        "label": "Refunds",
        "curl": "curl -X GET https://api.razorpay.com/v1/refunds -u <key_id>:<key_secret>",
        "request_url": "https://api.razorpay.com/v1/refunds",
        "request_method": "GET"
      },
      "dispures": {
        "label": "Disputes",
        "curl": "curl -X GET https://api.razorpay.com/v1/disputes -u <key_id>:<key_secret>",
        "request_url": "https://api.razorpay.com/v1/disputes",
        "request_method": "GET"
      },
      "contacts": {
        "label": "Contacts",
        "curl": "curl -X GET https://api.razorpay.com/v1/contacts -u <key_id>:<key_secret>",
        "request_url": "https://api.razorpay.com/v1/contacts",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "key_id": {
        "type": "text",
        "label": "Enter RazorPay API Key",
        "placeholder": "c2tfxxxxx-xxxxx-xxxxx-xxxxx-xxxxx"
      },
      "key_secret": {
        "type": "text",
        "label": "Enter RazorPay API Secret",
        "placeholder": "c2tfxxxxx-xxxxx-xxxxx-xxxxx-xxxxx"
      }
    },
    "api_documentation_page": "https://razorpay.com/docs/api/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Twilio": {
    "endpoints": {
      "accounts": {
        "label": "Accounts",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts.json",
        "request_method": "GET"
      },
      "calls": {
        "label": "Calls",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Calls.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Calls.json",
        "request_method": "GET"
      },
      "messages": {
        "label": "Messages",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Messages.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Messages.json",
        "request_method": "GET"
      },
      "recordings": {
        "label": "Recordings",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Recordings.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Recordings.json",
        "request_method": "GET"
      },
      "transcriptions": {
        "label": "Transcriptions",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Transcriptions.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Transcriptions.json",
        "request_method": "GET"
      },
      "usage": {
        "label": "Usage",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Usage.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Usage.json",
        "request_method": "GET"
      },
      "applications": {
        "label": "Applications",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Applications.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Applications.json",
        "request_method": "GET"
      },
      "incoming_phone_numbers": {
        "label": "Incoming Phone Numbers",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/IncomingPhoneNumbers.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/IncomingPhoneNumbers.json",
        "request_method": "GET"
      },
      "outgoing_caller_ids": {
        "label": "Outgoing Caller IDs",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/OutgoingCallerIds.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/OutgoingCallerIds.json",
        "request_method": "GET"
      },
      "queues": {
        "label": "Queues",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Queues.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Queues.json",
        "request_method": "GET"
      },
      "short_codes": {
        "label": "Short Codes",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/ShortCodes.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/ShortCodes.json",
        "request_method": "GET"
      },
      "conferences": {
        "label": "Conferences",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Conferences.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Conferences.json",
        "request_method": "GET"
      },
      "available_phone_numbers": {
        "label": "Available Phone Numbers",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/AvailablePhoneNumbers.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/AvailablePhoneNumbers.json",
        "request_method": "GET"
      },
      "balance": {
        "label": "Balance",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Balance.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Balance.json",
        "request_method": "GET"
      },
      "notifications": {
        "label": "Notifications",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Notifications.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Notifications.json",
        "request_method": "GET"
      },
      "keys": {
        "label": "Keys",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Keys.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Keys.json",
        "request_method": "GET"
      },
      "authorized_connect_apps": {
        "label": "Authorized Connect Apps",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/AuthorizedConnectApps.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/AuthorizedConnectApps.json",
        "request_method": "GET"
      },
      "sip": {
        "label": "SIP",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/SIP.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/SIP.json",
        "request_method": "GET"
      },
      "connect_apps": {
        "label": "Connect Apps",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/ConnectApps.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/ConnectApps.json",
        "request_method": "GET"
      },
      "addresses": {
        "label": "Addresses",
        "curl": "curl -X GET https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Addresses.json -u <account_sid>:<auth_token>",
        "request_url": "https://api.twilio.com/2010-04-01/Accounts/<account_sid>/Addresses.json",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "account_sid": {
        "type": "text",
        "label": "Enter Twilio Account SID",
        "placeholder": "ACxxxxx-xxxxx-xxxxx-xxxxx-xxxxx"
      },
      "auth_token": {
        "type": "text",
        "label": "Enter Twilio Auth Token",
        "placeholder": "xxxxx-xxxxx-xxxxx-xxxxx-xxxxx"
      }
    },
    "api_documentation_page": "https://www.twilio.com/docs/usage/api"
  },
  "NpmToken": {
    "endpoints": {
      "user": {
        "label": "User",
        "curl": "curl -X GET https://registry.npmjs.org/-/npm/v1/user -H 'Authorization: Bearer <token>'",
        "request_url": "https://registry.npmjs.org/-/npm/v1/user",
        "request_method": "GET"
      },
      "whoami": {
        "label": "WhoAmI",
        "curl": "curl -X GET https://registry.npmjs.org/-/whoami -H 'Authorization: Bearer <token>'",
        "request_url": "https://registry.npmjs.org/-/whoami",
        "request_method": "GET"
      },
      "list_org_packages": {
        "label": "List Org Packages",
        "curl": "curl -X GET https://registry.npmjs.org/-/org/<org>/package -H 'Authorization: Bearer <token>'",
        "request_url": "https://registry.npmjs.org/-/org/<org>/package",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "token": {
            "type": "text",
            "label": "Enter NPM Token",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "org": {
            "type": "text",
            "label": "Enter Organization",
            "placeholder": "npm"
          }
        }
      },
      "list_user_packages": {
        "label": "List User Packages",
        "curl": "curl -X GET https://registry.npmjs.org/-/user/<user>/package -H 'Authorization: Bearer <token>'",
        "request_url": "https://registry.npmjs.org/-/user/<user>/package",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "token": {
            "type": "text",
            "label": "Enter NPM Token",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "user": {
            "type": "text",
            "label": "Enter User ID",
            "placeholder": "npm"
          }
        }
      }
    },
    "input_fields": {
      "token": {
        "type": "text",
        "label": "Enter NPM Token",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://docs.npmjs.com/cli/v7/commands/npm-token",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Mailgun": {
    "endpoints": {
      "domains": {
        "label": "Domains",
        "curl": "curl -X GET https://api.mailgun.net/v3/domains -u 'api:<api_key>'",
        "request_url": "https://api.mailgun.net/v3/domains",
        "request_method": "GET"
      },
      "events": {
        "label": "Events",
        "curl": "curl -X GET https://api.mailgun.net/v3/<domain>/events -u 'api:<api_key>'",
        "request_url": "https://api.mailgun.net/v3/<domain>/events",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Mailgun API Key",
            "placeholder": "key-xxxx-xxxx-xxxx-xxxx"
          },
          "domain": {
            "type": "text",
            "label": "Enter Domain (fetched from domain endpoint)",
            "placeholder": "example.com"
          }
        }
      },
      "bounces": {
        "label": "Bounces",
        "curl": "curl -X GET https://api.mailgun.net/v3/<domain>/bounces -u 'api:<api_key>'",
        "request_url": "https://api.mailgun.net/v3/<domain>/bounces",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Mailgun API Key",
            "placeholder": "key-xxxx-xxxx-xxxx-xxxx"
          },
          "domain": {
            "type": "text",
            "label": "Enter Domain (fetched from domain endpoint)",
            "placeholder": "example.com"
          }
        }
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Mailgun API Key",
        "placeholder": "key-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://documentation.mailgun.com/en/latest/api_reference.html"
  },
  "Klaviyo": {
    "endpoints": {
      "profiles": {
        "label": "Profiles",
        "curl": "curl https://a.klaviyo.com/api/profiles -H 'Revision: 2023-02-22' -H 'Authorization: Klaviyo-API-Key <api_key>'",
        "request_url": "https://a.klaviyo.com/api/profiles",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Klaviyo API Key",
        "placeholder": "pk_xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developers.klaviyo.com/en/reference/api_overview",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "DigitalOcean": {
    "endpoints": {
      "account": {
        "label": "Account",
        "curl": "curl -X GET 'https://api.digitalocean.com/v2/account' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.digitalocean.com/v2/account",
        "request_method": "GET"
      },
      "droplets": {
        "label": "Droplets",
        "curl": "curl -X GET 'https://api.digitalocean.com/v2/droplets' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.digitalocean.com/v2/droplets",
        "request_method": "GET"
      },
      "SSH_keys": {
        "label": "SSH Keys",
        "curl": "curl -X GET 'https://api.digitalocean.com/v2/account/keys' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.digitalocean.com/v2/account/keys",
        "request_method": "GET"
      },
      "database_clusters": {
        "label": "Database Clusters",
        "curl": "curl -X GET 'https://api.digitalocean.com/v2/databases' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.digitalocean.com/v2/databases",
        "request_method": "GET"
      },
      "domains": {
        "label": "Domains",
        "curl": "curl -X GET 'https://api.digitalocean.com/v2/domains' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.digitalocean.com/v2/domains",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter DigitalOcean API Key",
        "placeholder": "dop_v1_xxxxx"
      }
    },
    "api_documentation_page": "https://docs.digitalocean.com/reference/api/api-reference"
  },
  "Honeycomb": {
    "endpoints": {
      "auth": {
        "label": "Auth",
        "curl": "curl -X GET 'https://api.honeycomb.io/1/auth' -H 'X-Honeycomb-Team: <api_key>'",
        "request_url": "https://api.honeycomb.io/1/auth",
        "request_method": "GET"
      },
      "boards": {
        "label": "Boards",
        "curl": "curl -X GET 'https://api.honeycomb.io/1/boards' -H 'X-Honeycomb-Team: <api_key>'",
        "request_url": "https://api.honeycomb.io/1/boards",
        "request_method": "GET"
      },
      "datasets": {
        "label": "Datasets",
        "curl": "curl -X GET 'https://api.honeycomb.io/1/datasets' -H 'X-Honeycomb-Team: <api_key>'",
        "request_url": "https://api.honeycomb.io/1/datasets",
        "request_method": "GET"
      },
      "recipients": {
        "label": "Recipients",
        "curl": "curl -X GET 'https://api.honeycomb.io/1/recipients' -H 'X-Honeycomb-Team: <api_key>'",
        "request_url": "https://api.honeycomb.io/1/recipients",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Honeycomb API Key",
        "placeholder": "xxxxxxxxxx"
      }
    },
    "api_documentation_page": "https://docs.honeycomb.io/api/"
  },
  "Eventbrite": {
    "endpoints": {
      "account_metadata": {
        "label": "Account Metadata",
        "curl": "curl -X GET 'https://www.eventbriteapi.com/v3/users/me/?token=<token>'",
        "request_url": "https://www.eventbriteapi.com/v3/users/me/",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "token": {
        "type": "text",
        "label": "Enter Eventbrite Token",
        "placeholder": "xxxxx"
      }
    },
    "api_documentation_page": "https://www.eventbrite.com/platform/api"
  },
  "SendGrid": {
    "endpoints": {
      "scopes": {
        "label": "Scopes",
        "curl": "curl -X GET https://api.sendgrid.com/v3/scopes -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.sendgrid.com/v3/scopes",
        "request_method": "GET"
      },
      "domains": {
        "label": "Domains",
        "curl": "curl -X GET https://api.sendgrid.com/v3/whitelabel/domains -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.sendgrid.com/v3/whitelabel/domains",
        "request_method": "GET"
      },
      "templates": {
        "label": "Templates",
        "curl": "curl -X GET https://api.sendgrid.com/v3/templates -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.sendgrid.com/v3/templates",
        "request_method": "GET"
      },
      "customer_accounts": {
        "label": "Customer Accounts",
        "curl": "curl -X GET https://api.sendgrid.com/v3/partners/accounts -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.sendgrid.com/v3/partners/accounts",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter SendGrid API Key",
        "placeholder": "SG.xxxxx"
      }
    },
    "api_documentation_page": "https://docs.sendgrid.com/api-reference",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "MailChimp": {
    "endpoints": {
      "account": {
        "label": "Account",
        "curl": "curl -X GET https://<dc>.api.mailchimp.com/3.0/ --user 'anystring:<api_key>'",
        "request_url": "https://<dc>.api.mailchimp.com/3.0/",
        "request_method": "GET"
      },
      "conversations": {
        "label": "Conversations",
        "curl": "curl -X GET https://<dc>.api.mailchimp.com/3.0/conversations --user 'anystring:<api_key>'",
        "request_url": "https://<dc>.api.mailchimp.com/3.0/conversations",
        "request_method": "GET"
      },
      "campaigns": {
        "label": "Campaigns",
        "curl": "curl -X GET https://<dc>.api.mailchimp.com/3.0/campaigns --user 'anystring:<api_key>'",
        "request_url": "https://<dc>.api.mailchimp.com/3.0/campaigns",
        "request_method": "GET"
      },
      "automations": {
        "label": "Automations",
        "curl": "curl -X GET https://<dc>.api.mailchimp.com/3.0/automations --user 'anysting:<api_key>'",
        "request_url": "https://<dc>.api.mailchimp.com/3.0/automations",
        "request_method": "GET"
      },
      "lists": {
        "label": "Lists",
        "curl": "curl -X GET https://<dc>.api.mailchimp.com/3.0/lists --user 'anystring:<api_key>'",
        "request_url": "https://<dc>.api.mailchimp.com/3.0/lists",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter MailChimp API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      },
      "dc": {
        "type": "text",
        "label": "Enter Data Center",
        "placeholder": "us1"
      }
    },
    "api_documentation_page": "https://mailchimp.com/developer/marketing/api/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Postmark": {
    "endpoints": {
      "server": {
        "label": "Server",
        "curl": "curl -X GET https://api.postmarkapp.com/server -H 'X-Postmark-Server-Token: <server_token>'",
        "request_url": "https://api.postmarkapp.com/server",
        "request_method": "GET"
      },
      "deliverystats": {
        "label": "Delivery Stats",
        "curl": "curl -X GET https://api.postmarkapp.com/deliverystats -H 'X-Postmark-Server-Token: <server_token>'",
        "request_url": "https://api.postmarkapp.com/deliverystats",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "server_token": {
        "type": "text",
        "label": "Enter Postmark Server Token",
        "placeholder": "xxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://postmarkapp.com/developer/api/email-api",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Telnyx": {
    "endpoints": {
      "addresses": {
        "label": "Addresses",
        "curl": "curl -X GET https://api.telnyx.com/v2/addresses -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.telnyx.com/v2/addresses",
        "request_method": "GET"
      },
      "notification_events": {
        "label": "Notification Events",
        "curl": "curl -X GET https://api.telnyx.com/v2/notification_events -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.telnyx.com/v2/notification_events",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Telnyx API Key",
        "placeholder": "key"
      }
    },
    "api_documentation_page": "https://developers.telnyx.com/api"
  },
  "Pipedrive": {
    "endpoints": {
      "deals": {
        "label": "Deals",
        "curl": "curl -X GET 'https://api.pipedrive.com/v1/deals?api_token=<api_key>'",
        "request_url": "https://api.pipedrive.com/v1/deals",
        "request_method": "GET"
      },
      "persons": {
        "label": "Persons",
        "curl": "curl -X GET 'https://api.pipedrive.com/v1/persons?api_token=<api_key>'",
        "request_url": "https://api.pipedrive.com/v1/persons",
        "request_method": "GET"
      },
      "organizations": {
        "label": "Organizations",
        "curl": "curl -X GET 'https://api.pipedrive.com/v1/organizations?api_token=<api_key>'",
        "request_url": "https://api.pipedrive.com/v1/organizations",
        "request_method": "GET"
      },
      "activities": {
        "label": "Activities",
        "curl": "curl -X GET 'https://api.pipedrive.com/v1/activities?api_token=<api_key>'",
        "request_url": "https://api.pipedrive.com/v1/activities",
        "request_method": "GET"
      },
      "notes": {
        "label": "Notes",
        "curl": "curl -X GET 'https://api.pipedrive.com/v1/notes?api_token=<api_key>'",
        "request_url": "https://api.pipedrive.com/v1/notes",
        "request_method": "GET"
      },
      "users": {
        "label": "Users",
        "curl": "curl -X GET 'https://api.pipedrive.com/v1/users?api_token=<api_key>'",
        "request_url": "https://api.pipedrive.com/v1/users",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_token": {
        "type": "text",
        "label": "Enter Pipedrive API Token",
        "placeholder": "xxxxx"
      }
    },
    "api_documentation_page": "https://developers.pipedrive.com/docs/api/v1/"
  },
  "Vercel": {
    "endpoints": {
      "user": {
        "label": "User",
        "curl": "curl -X GET 'https://api.vercel.com/www/user' -H 'Authorization: Brearer <api_token>'",
        "request_url": "https://api.vercel.com/www/user",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_token": {
        "type": "text",
        "label": "Enter Vercel API Token",
        "placeholder": "xxxx"
      }
    },
    "api_documentation_page": "https://vercel.com/docs/api"
  },
  "Bitly": {
    "endpoints": {
      "user": {
        "label": "User",
        "curl": "curl -X GET 'https://api-ssl.bitly.com/v4/user' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://api-ssl.bitly.com/v4/user",
        "request_method": "GET"
      },
      "organizations": {
        "label": "Organizations",
        "curl": "curl -X GET 'https://api-ssl.bitly.com/v4/organizations' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://api-ssl.bitly.com/v4/organizations",
        "request_method": "GET"
      },
      "groups": {
        "label": "Groups",
        "curl": "curl -X GET 'https://api-ssl.bitly.com/v4/groups' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://api-ssl.bitly.com/v4/groups",
        "request_method": "GET"
      },
      "get_campaigns": {
        "label": "Get Campaigns",
        "curl": "curl -X GET 'https://api-ssl.bitly.com/v4/campaigns?group_guid=<group_guid>' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://api-ssl.bitly.com/v4/campaigns?group_guid=<group_guid>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_token": {
            "type": "text",
            "label": "Enter Bitly API Token",
            "placeholder": "xxxx"
          },
          "group_guid": {
            "type": "text",
            "label": "Enter Group GUID (fetched from groups endpoint)",
            "placeholder": "xxxx"
          }
        }
      },
      "get_click_metric": {
        "label": "Get Click Metric",
        "curl": "curl -X GET 'https://api-ssl.bitly.com/v4/groups/<group_guid>/countries?unit=month&units=1&size=10&unit_reference=2006-01-02T15%3A04%3A05-0700' -H 'Authorization: Bearer xxxx'",
        "request_url": "https://api-ssl.bitly.com/v4/groups/Bm4khURQ6e8/countries?unit=month&units=1&size=10&unit_reference=2006-01-02T15%3A04%3A05-0700",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_token": {
            "type": "text",
            "label": "Enter Bitly API Token",
            "placeholder": "xxxx"
          },
          "group_guid": {
            "type": "text",
            "label": "Enter Group GUID (fetched from groups endpoint)",
            "placeholder": "xxxx"
          }
        }
      }
    },
    "input_fields": {
      "api_token": {
        "type": "text",
        "label": "Enter Bitly API Token",
        "placeholder": "xxxx"
      }
    },
    "api_documentation_page": "https://dev.bitly.com/api-reference"
  },
  "Algolia": {
    "endpoints": {
      "keys": {
        "label": "Keys",
        "curl": "curl -X GET 'https://<app_id>-dsn.algolia.net/1/keys' -H 'X-Algolia-API-Key: xxxx' -H 'X-Algolia-Application-Id: xxxx'",
        "request_url": "https://<app_id>-dsn.algolia.net/1/keys",
        "request_method": "GET"
      },
      "indexes": {
        "label": "Indexes",
        "curl": "curl -X GET 'https://<app_id>-dsn.algolia.net/1/indexes' -H 'X-Algolia-API-Key: xxxx' -H 'X-Algolia-Application-Id: xxxx'",
        "request_url": "https://<app_id>-dsn.algolia.net/1/indexes",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Algolia API Key",
        "placeholder": "xxxx"
      },
      "app_id": {
        "type": "text",
        "label": "Enter Algolia Application ID",
        "placeholder": "xxxx"
      }
    },
    "api_documentation_page": "https://www.algolia.com/doc/rest-api/search/"
  },
  "Posthog": {
    "endpoints": {
      "Account": {
        "label": "Account",
        "curl": "curl -X GET 'https://app.posthog.com/api/users/@me/?personal_api_key=<api_key>' -H 'Content-Type: application/json' \n OR curl -X GET 'https://eu.posthog.com/api/users/@me/?personal_api_key=<api_key>' -H 'Content-Type: application/json'",
        "request_url": "https://app.posthog.com/api/users/@me/?personal_api_key=<api_key>",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Posthog API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://posthog.com/docs/api",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Opsgenie": {
    "endpoints": {
      "Account": {
        "label": "Account",
        "curl": "curl -X GET 'https://api.opsgenie.com/v2/account' -H 'Authorization: GenieKey <api_key>'",
        "request_url": "https://api.opsgenie.com/v2/account",
        "request_method": "GET"
      },
      "Users": {
        "label": "Users",
        "curl": "curl -X GET 'https://api.opsgenie.com/v2/users' -H 'Authorization: GenieKey <api_key>'",
        "request_url": "https://api.opsgenie.com/v2/users",
        "request_method": "GET"
      },
      "Teams": {
        "label": "Teams",
        "curl": "curl -X GET 'https://api.opsgenie.com/v2/teams' -H 'Authorization: GenieKey <api_key>'",
        "request_url": "https://api.opsgenie.com/v2/teams",
        "request_method": "GET"
      },
      "Alerts": {
        "label": "Alerts",
        "curl": "curl -X GET 'https://api.opsgenie.com/v2/alerts' -H 'Authorization: GenieKey <api_key>'",
        "request_url": "https://api.opsgenie.com/v2/alerts",
        "request_method": "GET"
      },
      "AlertsCount": {
        "label": "Alerts Count",
        "curl": "curl -X GET 'https://api.opsgenie.com/v2/alerts/count' -H 'Authorization: GenieKey <api_key>'",
        "request_url": "https://api.opsgenie.com/v2/alerts/count",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Opsgenie API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://docs.opsgenie.com/docs/service-api",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Helpscout": {
    "endpoints": {
      "collections": {
        "label": "Article Collections",
        "curl": "curl -X GET 'https://docsapi.helpscout.net/v1/collections' -u <api_key>:X",
        "request_url": "https://docsapi.helpscout.net/v1/collections",
        "request_method": "GET"
      },
      "sites": {
        "label": "Sites",
        "curl": "curl -X GET 'https://docsapi.helpscout.net/v1/sites' -u <api_key>:X",
        "request_url": "https://docsapi.helpscout.net/v1/sites",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Helpscout API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developer.helpscout.com/docs-api/"
  },
  "Typeform": {
    "endpoints": {
      "forms": {
        "label": "Forms",
        "curl": "curl -X GET 'https://api.typeform.com/forms' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.typeform.com/forms",
        "request_method": "GET"
      },
      "workspaces": {
        "label": "Workspaces",
        "curl": "curl -X GET 'https://api.typeform.com/workspaces' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.typeform.com/workspaces",
        "request_method": "GET"
      },
      "account": {
        "label": "Account",
        "curl": "curl -X GET 'https://api.typeform.com/me' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.typeform.com/me",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Typeform API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://www.typeform.com/developers/create",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "GetResponse": {
    "endpoints": {
      "accounts": {
        "label": "Accounts",
        "curl": "curl -X GET 'https://api.getresponse.com/v3/accounts' -H 'X-Auth-Token: api-key <api_key>'",
        "request_url": "https://api.getresponse.com/v3/accounts",
        "request_method": "GET"
      },
      "campaigns": {
        "label": "Campaigns",
        "curl": "curl -X GET 'https://api.getresponse.com/v3/campaigns' -H 'X-Auth-Token: api-key <api_key>'",
        "request_url": "https://api.getresponse.com/v3/campaigns",
        "request_method": "GET"
      },
      "contacts": {
        "label": "Contacts",
        "curl": "curl -X GET 'https://api.getresponse.com/v3/contacts' -H 'X-Auth-Token: api-key <api_key>'",
        "request_url": "https://api.getresponse.com/v3/contacts",
        "request_method": "GET"
      },
      "webforms": {
        "label": "Webforms",
        "curl": "curl -X GET 'https://api.getresponse.com/v3/webforms' -H 'X-Auth-Token: api-key <api_key>'",
        "request_url": "https://api.getresponse.com/v3/webforms",
        "request_method": "GET"
      },
      "newsletters": {
        "label": "Newsletters",
        "curl": "curl -X GET 'https://api.getresponse.com/v3/newsletters' -H 'X-Auth-Token: api-key <api_key>'",
        "request_url": "https://api.getresponse.com/v3/newsletters",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter GetResponse API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://apidocs.getresponse.com/v3",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "YouSign": {
    "endpoints": {
      "users": {
        "label": "Users",
        "curl": "curl -X GET 'https://staging-api.yousign.com/users' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://staging-api.yousign.com/users",
        "request_method": "GET"
      },
      "files": {
        "label": "Files",
        "curl": "curl -X GET 'https://staging-api.yousign.com/files' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://staging-api.yousign.com/files",
        "request_method": "GET"
      },
      "signature_requests": {
        "label": "Signature Requests",
        "curl": "curl -X GET 'https://api.yousign.app/v3/signature-requests' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.yousign.app/v3/signature-requests",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter YouSign API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://dev.yousign.com/"
  },
  "Notion": {
    "endpoints": {
      "users": {
        "label": "Users",
        "curl": "curl -X GET 'https://api.notion.com/v1/users' -H 'Notion-Version: 2022-06-28' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.notion.com/v1/users",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Notion API Key",
        "placeholder": "secret_xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developers.notion.com/reference/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "MadKudu": {
    "endpoints": {
      "domain_lookup": {
        "label": "Domain Lookup",
        "curl": "curl -X GET 'https://api.madkudu.com/v1/companies?domain=madkudu.com' --user <api_key>:",
        "request_url": "https://api.madkudu.com/v1/companies?domain=madkudu.com",
        "request_method": "GET"
      },
      "person_lookup": {
        "label": "Person Lookup",
        "curl": "curl -X GET 'https://api.madkudu.com/v1/persons?email=paul@madkudu.com' --user <api_key>:",
        "request_url": "https://api.madkudu.com/v1/persons?email=paul@madkudu.com",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter MadKudu API Key",
        "placeholder": "xxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developers.madkudu.com/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Autopilot": {
    "endpoints": {
      "contacts": {
        "label": "Contacts",
        "curl": "curl -X GET 'https://api2.autopilothq.com/v1/contacts' -H 'autopilotapikey: <api_key>'",
        "request_url": "https://api2.autopilothq.com/v1/contacts",
        "request_method": "GET"
      },
      "account": {
        "label": "Account",
        "curl": "curl -X GET 'https://api2.autopilothq.com/v1/account' -H 'autopilotapikey: <api_key>'",
        "request_url": "https://api2.autopilothq.com/v1/account",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Autopilot API Key",
        "placeholder": "xxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://autopilot.docs.apiary.io/#"
  },
  "Slack": {
    "endpoints": {
      "auth.test": {
        "label": "Auth Test",
        "curl": "curl -X GET 'https://slack.com/api/auth.test' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://slack.com/api/auth.test",
        "request_method": "GET"
      },
      "users": {
        "label": "Users",
        "curl": "curl -X GET 'https://slack.com/api/users.list?limit=100' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://slack.com/api/users.list?limit=100",
        "request_method": "GET"
      },
      "channels": {
        "label": "Channels",
        "curl": "curl -X GET 'https://slack.com/api/conversations.list' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://slack.com/api/conversations.list",
        "request_method": "GET"
      },
      "messages": {
        "label": "Messages",
        "curl": "curl -X GET 'https://slack.com/api/conversations.history?channel=<channel_id>' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://slack.com/api/conversations.history?channel=<channel_id>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_token": {
            "type": "text",
            "label": "Enter Slack API Token",
            "placeholder": "xoxp-xxxx-xxxx-xxxx-xxxx"
          },
          "channel_id": {
            "type": "text",
            "label": "Enter Channel ID (fetched from channels endpoint)",
            "placeholder": "Cxxxxx"
          }
        }
      },
      "Reminders": {
        "label": "Notifications",
        "curl": "curl -X GET 'https://slack.com/api/reminders.list' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://slack.com/api/reminders.list",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_token": {
        "type": "text",
        "label": "Enter Slack API Token",
        "placeholder": "xoxp-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://api.slack.com/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "HuggingFace": {
    "endpoints": {
      "whoami": {
        "label": "WhoAmI",
        "curl": "curl -X GET https://huggingface.co/api/whoami-v2 -H 'authorization: Bearer <api_token>'",
        "request_url": "https://huggingface.co/api/whoami-v2",
        "request_method": "GET"
      },
      "models": {
        "label": "Models",
        "curl": "curl -X GET https://huggingface.co/api/models?author=<org>&full=true -H 'authorization: Bearer <api_token>'",
        "request_url": "https://huggingface.co/api/models?author=<org>&full=true",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_token": {
            "type": "text",
            "label": "Enter Hugging Face API Token",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "org": {
            "type": "text",
            "label": "Enter Organization Name",
            "placeholder": "xxxx"
          }
        }
      },
      "Spaces": {
        "label": "Spaces",
        "curl": "curl -X GET https://huggingface.co/api/spaces?author=<org>&full=true -H 'authorization: Bearer <api_token>'",
        "request_url": "https://huggingface.co/api/spaces?author=<org>&full=true",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_token": {
            "type": "text",
            "label": "Enter Hugging Face API Token",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "org": {
            "type": "text",
            "label": "Enter Organization Name",
            "placeholder": "xxxx"
          }
        }
      },
      "datasets": {
        "label": "Datasets",
        "curl": "curl -X GET https://huggingface.co/api/datasets?author=<org>&full=true -H 'authorization: Bearer <api_token>'",
        "request_url": "https://huggingface.co/api/datasets?author=<org>&full=true",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_token": {
            "type": "text",
            "label": "Enter Hugging Face API Token",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "org": {
            "type": "text",
            "label": "Enter Organization Name",
            "placeholder": "xxxx"
          }
        }
      }
    },
    "input_fields": {
      "api_token": {
        "type": "text",
        "label": "Enter Hugging Face API Token",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://huggingface.co/docs/hub/api"
  },
  "Shodan": {
    "endpoints": {
      "profile": {
        "label": "Profile",
        "curl": "curl -X GET 'https://api.shodan.io/account/profile?key=<api_key>'",
        "request_url": "https://api.shodan.io/account/profile?key=<api_key>",
        "request_method": "GET"
      },
      "organization": {
        "label": "Organization",
        "curl": "curl -X GET 'https://api.shodan.io/org?key=<api_key>'",
        "request_url": "https://api.shodan.io/org?key=<api_key>",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Shodan API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developer.shodan.io/api"
  },
  "Postman": {
    "endpoints": {
      "profile": {
        "label": "Profile",
        "curl": "curl -X GET 'https://api.getpostman.com/me' -H 'X-Api-Key: <api_key>'",
        "request_url": "https://api.getpostman.com/me",
        "request_method": "GET"
      },
      "accounts": {
        "label": "Accounts",
        "curl": "curl -X GET 'https://api.getpostman.com/accounts' -H 'X-Api-Key: <api_key>'",
        "request_url": "https://api.getpostman.com/accounts",
        "request_method": "GET"
      },
      "collections": {
        "label": "Collections",
        "curl": "curl -X GET 'https://api.getpostman.com/collections' -H 'X-Api-Key: <api_key>'",
        "request_url": "https://api.getpostman.com/collections",
        "request_method": "GET"
      },
      "workspaces": {
        "label": "Workspaces",
        "curl": "curl -X GET 'https://api.getpostman.com/workspaces' -H 'X-Api-Key: <api_key>'",
        "request_url": "https://api.getpostman.com/workspaces",
        "request_method": "GET"
      },
      "environments": {
        "label": "Environments",
        "curl": "curl -X GET 'https://api.getpostman.com/environments' -H 'X-Api-Key: <api_key>'",
        "request_url": "https://api.getpostman.com/environments",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Postman API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://docs.api.getpostman.com/"
  },
  "Terraform": {
    "endpoints": {
      "account": {
        "label": "Account",
        "curl": "curl -X GET 'https://app.terraform.io/api/v2/account/details' -H 'Authorization: Bearer <api_token>'",
        "request_url": "https://app.terraform.io/api/v2/account/details",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_token": {
        "type": "text",
        "label": "Enter Terraform Personal Token",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developer.hashicorp.com/terraform/cloud-docs/api-docs",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Doppler": {
    "endpoints": {
      "me": {
        "label": "Me",
        "curl": "curl -X GET 'https://api.doppler.com/v3/me' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.doppler.com/v3/me",
        "request_method": "GET"
      },
      "projects": {
        "label": "Projects",
        "curl": "curl -X GET 'https://api.doppler.com/v3/projects' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.doppler.com/v3/projects",
        "request_method": "GET"
      },
      "project_members": {
        "label": "Project Members",
        "curl": "curl -X GET 'https://api.doppler.com/v3/projects/project/members?project=<project_id>' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.doppler.com/v3/projects/project/members?project=<project_id>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Doppler API Key",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "project_id": {
            "type": "text",
            "label": "Enter Project ID (fetched from projects endpoint)",
            "placeholder": "xxxx"
          }
        }
      },
      "environments": {
        "label": "Environments",
        "curl": "curl -X GET 'https://api.doppler.com/v3/environments?project=<project_id>' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.doppler.com/v3/environments?project=<project_id>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Doppler API Key",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "project_id": {
            "type": "text",
            "label": "Enter Project ID (fetched from projects endpoint)",
            "placeholder": "xxxx"
          }
        }
      },
      "configs": {
        "label": "Configs",
        "curl": "curl -X GET 'https://api.doppler.com/v3/configs?project=<project_id>&environment=<environment_id>' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.doppler.com/v3/configs?project=<project_id>&environment=<environment_id>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Doppler API Key",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "project_id": {
            "type": "text",
            "label": "Enter Project ID (fetched from projects endpoint)",
            "placeholder": "xxxx"
          },
          "environment_id": {
            "type": "text",
            "label": "Enter Environment ID (fetched from environments endpoint)",
            "placeholder": "xxxx"
          }
        }
      },
      "secrets": {
        "label": "Secrets",
        "curl": "curl -X GET 'https://api.doppler.com/v3/secrets?project=<project_id>&config=<config_id>' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.doppler.com/v3/secrets?project=<project_id>&config=<config_id>",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Doppler API Key",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "project_id": {
            "type": "text",
            "label": "Enter Project ID (fetched from projects endpoint)",
            "placeholder": "xxxx"
          },
          "config_id": {
            "type": "text",
            "label": "Enter Config ID (fetched from configs endpoint)",
            "placeholder": "xxxx"
          }
        }
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Doppler API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://docs.doppler.com/docs/start",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Jfrog": {
    "endpoints": {
      "repositories": {
        "label": "Repositories",
        "curl": "curl -u <username>:<password> https://<domain>/artifactory/api/repositories",
        "request_url": "https://<domain>/artifactory/api/repositories",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "domain": {
        "type": "text",
        "label": "Enter Jfrog Domain",
        "placeholder": "domain"
      },
      "username": {
        "type": "text",
        "label": "Enter Jfrog Username",
        "placeholder": "username"
      },
      "password": {
        "type": "text",
        "label": "Enter Jfrog Password",
        "placeholder": "password"
      }
    },
    "api_documentation_page": "https://jfrog.com/help/r/jfrog-rest-apis/artifactory-rest-apis",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Buildkite": {
    "endpoints": {
      "access_scope": {
        "label": "Access Scope",
        "curl": "curl -X GET 'https://api.buildkite.com/v2/access-token' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.buildkite.com/v2/access-token",
        "request_method": "GET"
      },
      "user": {
        "label": "User",
        "curl": "curl -X GET 'https://api.buildkite.com/v2/user' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.buildkite.com/v2/user",
        "request_method": "GET"
      },
      "organizations": {
        "label": "Organizations",
        "curl": "curl -X GET 'https://api.buildkite.com/v2/organizations' -H 'Authorization: Bearer <api_key>'",
        "request_url": "https://api.buildkite.com/v2/organizations",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Buildkite API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://buildkite.com/docs/apis/rest-api"
  },
  "Pulumi": {
    "endpoints": {
      "stacks": {
        "label": "Stacks",
        "curl": "curl -X GET 'https://api.pulumi.com/api/user/stacks' -H 'Authorization: token <api_key>'",
        "request_url": "https://api.pulumi.com/api/user/stacks",
        "request_method": "GET"
      },
      "list_users": {
        "label": "List Users",
        "curl": "curl -X GET 'https://api.pulumi.com/api/orgs/<org_id>/members?type=backend' -H 'Authorization: token <api_key>'",
        "request_url": "https://api.pulumi.com/api/orgs/<org_id>/members?type=backend",
        "request_method": "GET",
        "override_default_input_field": true,
        "input_fields": {
          "api_key": {
            "type": "text",
            "label": "Enter Pulumi API Key",
            "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
          },
          "org_id": {
            "type": "text",
            "label": "Enter Organization ID, fetched from stacks endpoint",
            "placeholder": "xxxx"
          }
        }
      },
      "list_tokens": {
        "label": "List Tokens",
        "curl": "curl -X GET 'https://api.pulumi.com/api/user/tokens' -H 'Authorization: token <api_key>'",
        "request_url": "https://api.pulumi.com/api/user/tokens",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Pulumi API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://www.pulumi.com/docs/pulumi-cloud/reference/cloud-rest-api"
  },
  "Snyk": {
    "endpoints": {
      "user": {
        "label": "User",
        "curl": "curl -X GET 'https://snyk.io/api/v1/user/me' -H 'Authorization: token <api_key>'",
        "request_url": "https://snyk.io/api/v1/user/me",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Snyk API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://snyk.io/docs/api",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "EvolutionAPI": {
    "endpoints": {
      "fetch_instances": {
        "label": "Fetch Instances",
        "curl": "curl --request GET --url https://<instance_url>/instance/fetchInstances --header 'apikey: <api_key>'",
        "request_url": "https://<instance_url>/instance/fetchInstances",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter Evolution API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      },
      "instance_url": {
        "type": "text",
        "label": "Enter Instance URL",
        "placeholder": "https://example.com"
      }
    },
    "api_documentation_page": "https://doc.evolution-api.com/v2/api-reference"
  },
  "PushBullet": {
    "endpoints": {
      "me": {
        "label": "Me",
        "curl": "curl -X GET 'https://api.pushbullet.com/v2/users/me' -H 'Access-Token: <api_key>'",
        "request_url": "https://api.pushbullet.com/v2/users/me",
        "request_method": "GET"
      },
      "devices": {
        "label": "Devices",
        "curl": "curl -X GET 'https://api.pushbullet.com/v2/devices' -H 'Access-Token: <api_key>'",
        "request_url": "https://api.pushbullet.com/v2/devices",
        "request_method": "GET"
      },
      "chats": {
        "label": "Chats",
        "curl": "curl -X GET 'https://api.pushbullet.com/v2/chats' -H 'Access-Token: <api_key>'",
        "request_url": "https://api.pushbullet.com/v2/chats",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter PushBullet API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://docs.pushbullet.com/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "SquareAccessToken": {
    "endpoints": {
      "me": {
        "label": "Me",
        "curl": "curl -X GET 'https://connect.squareupsandbox.com/v2/merchants/me' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://connect.squareupsandbox.com/v2/merchants/me",
        "request_method": "GET"
      },
      "payouts": {
        "label": "Payouts",
        "curl": "curl -X GET 'https://connect.squareupsandbox.com/v2/payouts' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://connect.squareupsandbox.com/v2/payouts",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "access_token": {
        "type": "text",
        "label": "Enter Square Access Token",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developer.squareup.com/docs/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Sentry": {
    "endpoints": {
      "scopes": {
        "label": "Scopes",
        "curl": "curl -X GET 'https://sentry.io/api/0/' -H 'Authorization: Bearer <auth_token>'",
        "request_url": "https://sentry.io/api/0/",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "auth_token": {
        "type": "text",
        "label": "Enter Sentry Auth Token",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://docs.sentry.io/api/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Bitbucket": {
    "endpoints": {
      "repos": {
        "label": "Repos",
        "curl": "curl -X GET -u <username>:<password> https://api.bitbucket.org/2.0/repositories/<org>?pagelen=100",
        "request_url": "https://api.bitbucket.org/2.0/repositories/<org>?pagelen=100",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "username": {
        "type": "text",
        "label": "Enter Bitbucket Username",
        "placeholder": "username"
      },
      "password": {
        "type": "text",
        "label": "Enter Bitbucket Password/Token",
        "placeholder": "password"
      },
      "org": {
        "type": "text",
        "label": "Enter Bitbucket Org",
        "placeholder": "org"
      }
    },
    "api_documentation_page": "https://developer.atlassian.com/server/bitbucket/rest/intro/"
  },
  "Jira": {
    "endpoints": {
      "authentication": {
        "label": "Check Authentication",
        "curl": "curl -X GET '<app_domain>/rest/api/3/myself' -u '<email>:<api_token>'",
        "request_url": "<app_domain>/rest/api/3/myself",
        "request_method": "GET"
      },
      "projects": {
        "label": "List All Projects",
        "curl": "curl -X GET '<app_domain>/rest/api/3/project/search' -u '<email>:<api_token>'",
        "request_url": "<app_domain>/rest/api/3/project/search",
        "request_method": "GET"
      },
      "users": {
        "label": "Get All Users",
        "curl": "curl -X GET '<app_domain>/rest/api/3/users/search' -u '<email>:<api_token>'",
        "request_url": "<app_domain>/rest/api/3/users/search",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "app_domain": {
        "type": "text",
        "label": "Enter JIRA App Domain",
        "placeholder": "https://yourcompany.atlassian.net"
      },
      "email": {
        "type": "text",
        "label": "Enter JIRA Account Email",
        "placeholder": "your_email@example.com"
      },
      "api_token": {
        "type": "text",
        "label": "Enter JIRA API Token",
        "placeholder": "your_api_token_here"
      }
    },
    "api_documentation_page": "https://developer.atlassian.com/cloud/jira/platform/rest/v3/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Pandadoc": {
    "endpoints": {
      "users": {
        "label": "Members",
        "curl": "curl -X GET 'https://api.pandadoc.com/public/v1/members' -H 'Authorization: API-Key <api_key>'",
        "request_url": "https://api.pandadoc.com/public/v1/members",
        "request_method": "GET"
      },
      "documents": {
        "label": "Documents",
        "curl": "curl -X GET 'https://api.pandadoc.com/public/v1/documents' -H 'Authorization: API-Key <api_key>'",
        "request_url": "https://api.pandadoc.com/public/v1/documents",
        "request_method": "GET"
      },
      "apilogs": {
        "label": "API Logs",
        "curl": "curl -X GET 'https://api.pandadoc.com/public/v1/logs' -H 'Authorization: API-Key <api_key>'",
        "request_url": "https://api.pandadoc.com/public/v1/logs",
        "request_method": "GET"
      },
      "contacts": {
        "label": "Contacts",
        "curl": "curl -X GET 'https://api.pandadoc.com/public/v1/contacts' -H 'Authorization: API-Key <api_key>'",
        "request_url": "https://api.pandadoc.com/public/v1/contacts",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter PandaDoc API Key",
        "placeholder": "xxxx-xxxx-xxxx-xxxx-xxxx"
      }
    },
    "api_documentation_page": "https://developers.pandadoc.com/reference"
  },
  "HubSpot": {
    "endpoints": {
      "get_contacts": {
        "label": "Get All Contacts",
        "curl": "curl -X GET 'https://api.hubapi.com/crm/v3/objects/contacts' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://api.hubapi.com/crm/v3/objects/contacts",
        "request_method": "GET"
      },
      "get_companies": {
        "label": "Get All Companies",
        "curl": "curl -X GET 'https://api.hubapi.com/crm/v3/objects/companies' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://api.hubapi.com/crm/v3/objects/companies",
        "request_method": "GET"
      },
      "get_deals": {
        "label": "Get All Deals",
        "curl": "curl -X GET 'https://api.hubapi.com/crm/v3/objects/deals' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://api.hubapi.com/crm/v3/objects/deals",
        "request_method": "GET"
      },
      "get_owners": {
        "label": "Get All Owners",
        "curl": "curl -X GET 'https://api.hubapi.com/crm/v3/owners' -H 'Authorization: Bearer <access_token>'",
        "request_url": "https://api.hubapi.com/crm/v3/owners",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "access_token": {
        "type": "text",
        "label": "Enter HubSpot Access Token",
        "placeholder": "pat-na1-xxx"
      }
    },
    "api_documentation_page": "https://developers.hubspot.com/docs/api/overview",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "AWS": {
    "endpoints": {
      "get_caller_identity": {
        "label": "Get Caller Identity",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/get_caller_identity\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/get_caller_identity",
        "request_method": "POST"
      },
      "list_buckets": {
        "label": "List Buckets",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/list_buckets\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/list_buckets",
        "request_method": "POST"
      },
      "list_ec2_instances": {
        "label": "List EC2 Instances",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/list_ec2_instances\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\", \"region\": \"<region>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/list_ec2_instances",
        "request_method": "POST",
        "override_default_input_field": true,
        "input_fields": {
          "access_key": {
            "type": "text",
            "label": "Enter AWS Access Key",
            "placeholder": "AKIA"
          },
          "secrets_access_key": {
            "type": "text",
            "label": "Enter AWS Secret Key",
            "placeholder": "xxxxxx"
          },
          "region": {
            "type": "text",
            "label": "Enter AWS Region",
            "placeholder": "us-east-1"
          }
        }
      },
      "get_cost_and_usage": {
        "label": "Get Cost and Usage",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/get_cost_and_usage\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/get_cost_and_usage",
        "request_method": "POST"
      },
      "get_service_cost_and_usage": {
        "label": "Get Cost and Usage By Service",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/get_service_cost_and_usage\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/get_service_cost_and_usage",
        "request_method": "POST"
      },
      "list_account_aliases": {
        "label": "List Account Aliases",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/list_account_aliases\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/list_account_aliases",
        "request_method": "POST"
      },
      "list_hosted_zones": {
        "label": "List Hosted Zones",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/list_hosted_zones\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/list_hosted_zones",
        "request_method": "POST"
      },
      "list_roles": {
        "label": "List IAM Roles",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/list_roles\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/list_roles",
        "request_method": "POST"
      },
      "describe_organization": {
        "label": "Describe Organization",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/describe_organization\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/describe_organization",
        "request_method": "POST"
      },
      "get_contact_information": {
        "label": "Get Contact Information",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/aws/get_contact_information\" -H \"Content-Type: application/json\" -d '{\"aws_access_key\": \"<access_key>\", \"aws_secret_key\": \"<secrets_access_key>\"}'",
        "request_url": "<secrets_ninja_proxy>/aws/get_contact_information",
        "request_method": "POST"
      }
    },
    "input_fields": {
      "access_key": {
        "type": "text",
        "label": "Enter AWS Access Key",
        "placeholder": "AKIA"
      },
      "secrets_access_key": {
        "type": "text",
        "label": "Enter AWS Secret Key",
        "placeholder": "xxxxxx"
      }
    },
    "api_documentation_page": "https://docs.aws.amazon.com/cli/latest/reference/",
    "alert": {
      "alert_message": "These creds can't be tested using frontend JS. It's using secrets-ninja-proxy to get pass through those limitations.",
      "color": "info"
    }
  },
  "MongoDB": {
    "endpoints": {
      "list_databases": {
        "label": "List Databases",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/mongodb/list_databases\" -d '{\"mongodb_uri\": \"<mongodb_uri>\"}'",
        "request_url": "<secrets_ninja_proxy>/mongodb/list_databases",
        "request_method": "POST"
      },
      "list_collections": {
        "label": "List Collections",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/mongodb/list_db_collections\" -d '{\"mongodb_uri\": \"<mongodb_uri>\", \"database\": \"<database>\"}'",
        "request_url": "<secrets_ninja_proxy>/mongodb/list_db_collections",
        "request_method": "POST",
        "override_default_input_field": true,
        "input_fields": {
          "mongodb_uri": {
            "type": "text",
            "label": "Enter MongoDB URI",
            "placeholder": "<mongodb_uri>"
          },
          "database": {
            "type": "text",
            "label": "Enter Database Name",
            "placeholder": "<database>"
          }
        }
      },
      "list_records": {
        "label": "List Records",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/mongodb/list_records\" -d '{\"mongodb_uri\": \"<mongodb_uri>\", \"database\": \"<database>\", \"collection\": \"<collection>\"}'",
        "request_url": "<secrets_ninja_proxy>/mongodb/list_records",
        "request_method": "POST",
        "override_default_input_field": true,
        "input_fields": {
          "mongodb_uri": {
            "type": "text",
            "label": "Enter MongoDB URI",
            "placeholder": "<mongodb_uri>"
          },
          "database": {
            "type": "text",
            "label": "Enter Database Name",
            "placeholder": "<database>"
          },
          "collection": {
            "type": "text",
            "label": "Enter Collection Name",
            "placeholder": "<collection>"
          }
        }
      }
    },
    "input_fields": {
      "mongodb_uri": {
        "type": "text",
        "label": "Enter MongoDB URI",
        "placeholder": "<mongodb_uri>"
      }
    },
    "api_documentation_page": "https://docs.mongodb.com/manual/reference/",
    "alert": {
      "alert_message": "These creds can't be tested using frontend JS. It's using secrets-ninja-proxy to get pass through those limitations.",
      "color": "info"
    }
  },
  "RabbitMQ": {
    "endpoints": {
      "get_queues": {
        "label": "Get Queues",
        "curl": "curl -X POST <secrets_ninja_proxy>/rabbitmq/get_queues -d \"{\\\"connection_string\\\":\\\"<connection_string>\\\"}\"",
        "request_url": "<secrets_ninja_proxy>/rabbitmq/get_queues",
        "request_method": "POST"
      },
      "get_queue_data": {
        "label": "Get Queue Data",
        "curl": "curl -X POST <secrets_ninja_proxy>/rabbitmq/get_queue_data -d \"{\\\"connection_string\\\":\\\"<connection_string>\\\", \\\"queue_name\\\":\\\"<queue_name>\\\"}\"",
        "request_url": "<secrets_ninja_proxy>/rabbitmq/get_queue_data",
        "request_method": "POST",
        "override_default_input_field": true,
        "input_fields": {
          "connection_string": {
            "type": "text",
            "label": "Enter RabbitMQ connection_string",
            "placeholder": "<connection_string>"
          },
          "queue_name": {
            "type": "text",
            "label": "Enter Queue Name",
            "placeholder": "<queue_name>"
          }
        }
      }
    },
    "input_fields": {
      "connection_string": {
        "type": "text",
        "label": "Enter RabbitMQ connection_string",
        "placeholder": "<connection_string>"
      }
    },
    "api_documentation_page": "https://www.rabbitmq.com/management.html",
    "alert": {
      "alert_message": "These creds can't be tested using frontend JS. It's using secrets-ninja-proxy to get pass through those limitations.",
      "color": "info"
    }
  },
  "Postgres": {
    "endpoints": {
      "list_databases": {
        "label": "List Databases",
        "curl": "curl -X POST <secrets_ninja_proxy>/postgres/list_databases -d \"{\\\"postgres_uri\\\":\\\"<connection_string>\\\"}\"",
        "request_url": "<secrets_ninja_proxy>/postgres/list_databases",
        "request_method": "POST"
      },
      "list_db_tables": {
        "label": "List DB Tables",
        "curl": "curl -X POST <secrets_ninja_proxy>/postgres/list_db_tables -d \"{\\\"postgres_uri\\\":\\\"<connection_string>\\\", \\\"database\\\":\\\"<database>\\\"}\"",
        "request_url": "<secrets_ninja_proxy>/postgres/list_db_tables",
        "request_method": "POST",
        "override_default_input_field": true,
        "input_fields": {
          "connection_string": {
            "type": "text",
            "label": "Enter Postgres connection_string",
            "placeholder": "<connection_string>"
          },
          "database": {
            "type": "text",
            "label": "Enter Database Name",
            "placeholder": "<database>"
          }
        }
      },
      "list_records": {
        "label": "List Records",
        "curl": "curl -X POST <secrets_ninja_proxy>/postgres/list_records -d \"{\\\"postgres_uri\\\":\\\"<connection_string>\\\", \\\"database\\\":\\\"<database>\\\", \\\"table\\\":\\\"<table>\\\"}\"",
        "request_url": "<secrets_ninja_proxy>/postgres/list_records",
        "request_method": "POST",
        "override_default_input_field": true,
        "input_fields": {
          "connection_string": {
            "type": "text",
            "label": "Enter Postgres connection_string",
            "placeholder": "<connection_string>"
          },
          "database": {
            "type": "text",
            "label": "Enter Database Name",
            "placeholder": "<database>"
          },
          "table": {
            "type": "text",
            "label": "Enter Table Name",
            "placeholder": "<table>"
          }
        }
      }
    },
    "input_fields": {
      "connection_string": {
        "type": "text",
        "label": "Enter Postgres connection_string",
        "placeholder": "<connection_string>"
      }
    },
    "api_documentation_page": "https://www.postgresql.org/docs/current/index.html",
    "alert": {
      "alert_message": "These creds can't be tested using frontend JS. It's using secrets-ninja-proxy to get pass through those limitations.",
      "color": "info"
    }
  },
  "Zendesk": {
    "endpoints": {
      "current_user": {
        "label": "Current User Info",
        "curl": "curl https://<subdomain>.zendesk.com/api/v2/users/me.json -u <email>/token:<api_token>",
        "request_url": "https://<subdomain>.zendesk.com/api/v2/users/me.json",
        "request_method": "GET"
      },
      "tickets": {
        "label": "Tickets",
        "curl": "curl https://<subdomain>.zendesk.com/api/v2/tickets.json -u <email>/token:<api_token>",
        "request_url": "https://<subdomain>.zendesk.com/api/v2/tickets.json",
        "request_method": "GET"
      },
      "users": {
        "label": "All Users",
        "curl": "curl https://<subdomain>.zendesk.com/api/v2/users.json -u <email>/token:<api_token>",
        "request_url": "https://<subdomain>.zendesk.com/api/v2/users.json",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "subdomain": {
        "type": "text",
        "label": "Zendesk Subdomain",
        "placeholder": "yourcompany"
      },
      "email": {
        "type": "text",
        "label": "Zendesk Account Email",
        "placeholder": "you@company.com"
      },
      "api_token": {
        "type": "text",
        "label": "Zendesk API Token",
        "placeholder": "your_api_token"
      }
    },
    "api_documentation_page": "https://developer.zendesk.com/api-reference/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "GCP": {
    "endpoints": {
      "list_projects": {
        "label": "List Projects",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/gcp/list_projects\" -H \"Content-Type: application/json\" -d '{\"gcp_creds\": <gcp_creds>}'",
        "request_url": "<secrets_ninja_proxy>/gcp/list_projects",
        "request_method": "POST"
      },
      "list_buckets": {
        "label": "List Buckets",
        "curl": "curl -X POST \"<secrets_ninja_proxy>/gcp/list_buckets\" -H \"Content-Type: application/json\" -d '{\"gcp_creds\": <gcp_creds>}'",
        "request_url": "<secrets_ninja_proxy>/gcp/list_buckets",
        "request_method": "POST"
      }
    },
    "input_fields": {
      "gcp_creds": {
        "type": "text",
        "label": "Enter GCP Service Account JSON",
        "placeholder": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"...\",\n  ...\n}"
      }
    },
    "api_documentation_page": "https://cloud.google.com/resource-manager/docs/reference/rest/v1/projects/list",
    "alert": {
      "alert_message": "These creds can't be tested using frontend JS. It's using secrets-ninja-proxy to get pass through those limitations.",
      "color": "info"
    }
  },
  "NVIDIA": {
    "endpoints": {
      "caller_info": {
        "label": "Caller Info",
        "curl": "curl -X POST 'https://api.ngc.nvidia.com/v3/keys/get-caller-info' -d 'credentials=<api_key>'",
        "request_url": "https://api.ngc.nvidia.com/v3/keys/get-caller-info",
        "request_method": "POST"
      }
    },
    "input_fields": {
      "api_key": {
        "type": "text",
        "label": "Enter NGC API Key",
        "placeholder": "nvapi-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
      }
    },
    "api_documentation_page": "https://docs.ngc.nvidia.com/api/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "SonarCloud": {
    "endpoints": {
      "organizations": {
        "label": "Organizations",
        "curl": "curl -u <token>: 'https://sonarcloud.io/api/organizations/search?member=true'",
        "request_url": "https://sonarcloud.io/api/organizations/search?member=true",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "token": {
        "type": "text",
        "label": "Enter SonarCloud API Token",
        "placeholder": "sonarcloud_token"
      }
    },
    "api_documentation_page": "https://sonarcloud.io/web_api",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Clerk": {
    "endpoints": {
      "domains": {
        "label": "Domains",
        "curl": "curl -X GET 'https://api.clerk.com/v1/domains' -H 'Authorization Bearer <secret_key>'",
        "request_url": "https://api.clerk.com/v1/domains",
        "request_method": "GET"
      },
      "users": {
        "label": "List Users",
        "curl": "curl -X GET 'https://api.clerk.com/v1/users' -H 'Authorization Bearer <secret_key>'",
        "request_url": "https://api.clerk.com/v1/users",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "secret_key": {
        "type": "text",
        "label": "Enter Clerk Secret Key",
        "placeholder": "sk_live_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
      }
    },
    "api_documentation_page": "https://clerk.com/docs/reference/backend-api/description/introduction",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  },
  "Okta": {
    "endpoints": {
      "users": {
        "label": "Users",
        "curl": "curl -X GET 'https://<your_okta_domain>/api/v1/users' -H 'Authorization: SSWS <api_token>'",
        "request_url": "https://<your_okta_domain>/api/v1/users",
        "request_method": "GET"
      },
      "groups": {
        "label": "Groups",
        "curl": "curl -X GET 'https://<your_okta_domain>/api/v1/groups' -H 'Authorization: SSWS <api_token>'",
        "request_url": "https://<your_okta_domain>/api/v1/groups",
        "request_method": "GET"
      },
      "apps": {
        "label": "Applications",
        "curl": "curl -X GET 'https://<your_okta_domain>/api/v1/apps' -H 'Authorization: SSWS <api_token>'",
        "request_url": "https://<your_okta_domain>/api/v1/apps",
        "request_method": "GET"
      }
    },
    "input_fields": {
      "your_okta_domain": {
        "type": "text",
        "label": "Enter Your Okta Domain",
        "placeholder": "yourcompany.okta.com"
      },
      "api_token": {
        "type": "text",
        "label": "Enter Okta API Token",
        "placeholder": "00a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6"
      }
    },
    "api_documentation_page": "https://developer.okta.com/docs/api/",
    "alert": {
      "alert_message": "Use the curl on your machine or self host project to test creds privately. Or check the proxy box to use secrets-ninja-proxy to bypass CORS.",
      "color": "failure"
    }
  }
}